{"version":3,"file":"static/js/360.621c344f.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItems/DialogItems.jsx","components/Dialogs/Message/Message.jsx","utils/validators/SchemaMessage.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthNavigate.js","components/Dialogs/DialogContainer.jsx","webpack://social-network/./src/components/common/FormsControls/FormsControls.module.css?eb50","components/common/FormsControls/FormsControls.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogs-items\":\"Dialogs_dialogs-items__pKYGb\",\"dialog\":\"Dialogs_dialog__htSTl\",\"dialog-items\":\"Dialogs_dialog-items__g57Ag\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"btn\":\"Dialogs_btn__BVDb-\",\"text\":\"Dialogs_text__6tKID\",\"formContainer\":\"Dialogs_formContainer__7rKFM\",\"textarea\":\"Dialogs_textarea__anpMz\",\"sendButton\":\"Dialogs_sendButton__IIpAF\",\"sendButtonDisabled\":\"Dialogs_sendButtonDisabled__bTyHm\",\"errorMessage\":\"Dialogs_errorMessage__EyImq\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./../Dialogs.module.css\";\n\nconst DialogItems = (props) => {\n  let path = `/dialogs/${props.id}`;\n  return (\n    <div className={classes.dialog + \" \" + classes.active}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItems;\n","import React from \"react\";\nimport classes from \"./../Dialogs.module.css\";\n\nconst Message = (props) => {\n  return <div className={classes.dialog}>{props.message}</div>;\n};\n\nexport default Message;\n","import * as Yup from \"yup\";\n\nconst validationSchemaMessage = Yup.object().shape({\n  message: Yup.string()\n    .min(10, \"Message must be at least 10 characters\")\n    .max(1000, \"Message must be 1000 or less characters\")\n    .required(\"Message is required\")\n});\n\nexport default validationSchemaMessage;\n","import React from \"react\";\nimport { Form, Formik, Field } from \"formik\";\nimport { sendMessageCreator } from \"../Redux/MessagesReducer\";\nimport DialogItems from \"./DialogItems/DialogItems\";\nimport Message from \"./Message/Message\";\nimport validationSchemaMessage from \"../../utils/validators/SchemaMessage\";\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\nimport classes from \"./Dialogs.module.css\";\n\nconst Dialogs = ({ messages, dispatch }) => {\n  let dialogsElement = messages.dialogsData.map((dialog) => (\n    <DialogItems name={dialog.name} key={dialog.id} id={dialog.id} />\n  ));\n  let messagesElement = messages.messagesData.map((message) => (\n    <Message message={message.message} key={message.id} id={message.id} />\n  ));\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes[\"dialogs-items\"]}>{dialogsElement}</div>\n      <div className={classes.messages}>\n        <div>{messagesElement} </div>\n        <AddMessageForm dispatch={dispatch} />\n      </div>\n    </div>\n  );\n};\n\nconst AddMessageForm = ({ dispatch }) => {\n  return (\n    <Formik\n      initialValues={{ message: \"\" }}\n      validationSchema={validationSchemaMessage}\n      onSubmit={(values, { resetForm }) => {\n        dispatch(sendMessageCreator(values.message));\n        resetForm();\n      }}\n    >\n      {({ isValid }) => (\n        <Form className={classes.formContainer}>\n          <div>\n            <Field\n              component={Textarea}\n              name=\"message\"\n              placeholder=\"Enter your message\"\n              className={classes.textarea}\n            />\n          </div>\n          <div>\n            <button\n              className={`${classes.sendButton} ${\n                !isValid ? classes.sendButtonDisabled : \"\"\n              }`}\n              type=\"submit\"\n              disabled={!isValid}\n            >\n              Send\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default Dialogs;\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForNavigate = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nconst withAuthNavigate = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectedNavigateComponent = connect(mapStateToPropsForNavigate)(\n    RedirectComponent\n  );\n\n  return ConnectedNavigateComponent;\n};\n\nexport default withAuthNavigate;\n","import Dialogs from \"./Dialogs\";\nimport { sendMessageCreator } from \"../Redux/MessagesReducer\";\nimport { connect } from \"react-redux\";\nimport withAuthNavigate from \"../../hoc/withAuthNavigate\";\nimport { compose } from \"redux\";\n\nconst mapStatetoProps = (state) => {\n  return {\n    messages: state.messages\n  };\n};\n\nconst mapDispatchtoProps = (dispatch) => {\n  return {\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    }\n  };\n};\n\nexport default compose(\n  withAuthNavigate,\n  connect(mapStatetoProps, mapDispatchtoProps)\n)(Dialogs);\n","// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"FormsControls_form-control__KOICr\",\"error\":\"FormsControls_error__wukgD\",\"formField\":\"FormsControls_formField__Z4Rfv\"};","import React from \"react\";\nimport classes from \"./FormsControls.module.css\";\n\nconst FormsControls = ({ field, form, ...props }) => {\n  const hasError = form.touched[field.name] && form.errors[field.name];\n\n  return (\n    <div\n      className={\n        classes[\"form-control\"] + \" \" + (hasError ? classes.error : \"\")\n      }\n    >\n      <div>{props.children}</div>\n      {hasError && <span>{form.errors[field.name]}</span>}\n    </div>\n  );\n};\n\nexport const Textarea = (props) => {\n  const { field, form, child, ...restProps } = props;\n  return (\n    <FormsControls {...props}>\n      <textarea {...field} {...restProps} />\n    </FormsControls>\n  );\n};\n\nexport const Input = (props) => {\n  const { field, form, child, ...restProps } = props;\n  return (\n    <FormsControls {...props}>\n      <div className={classes.formField}>\n        <input {...field} {...restProps} />\n      </div>\n    </FormsControls>\n  );\n};\n"],"names":["props","path","concat","id","_jsx","className","classes","children","NavLink","to","name","message","Yup","shape","min","max","required","AddMessageForm","_ref2","dispatch","Formik","initialValues","validationSchema","validationSchemaMessage","onSubmit","values","_ref3","resetForm","sendMessageCreator","_ref4","isValid","_jsxs","Form","Field","component","Textarea","placeholder","type","disabled","_ref","messages","dialogsElement","dialogsData","map","dialog","DialogItems","messagesElement","messagesData","Message","mapStateToPropsForNavigate","state","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate","connect","compose","withAuthNavigate","sendMessage","Dialogs","FormsControls","field","form","hasError","touched","errors","child","restProps","Input"],"sourceRoot":""}